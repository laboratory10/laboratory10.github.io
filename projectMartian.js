
let mslLabel = document.getElementById("mslLabel");
let earthLabel = document.getElementById("earthLabel");

let marsEarthDistance = document.getElementById("marsEarthDistance");
let curiosityClock = document.getElementById("curiosityClock");
let curiositySol = document.getElementById("curiositySol");
let earthDate = document.getElementById("earthDate");
let earthClock = document.getElementById("earthClock");
let minuteArc = document.getElementById("minuteArc");
let hourArc = document.getElementById("hourArc");

let taiOffset = 37;
let lastTaiUpdate = "1 January 2017";

var weekArray = new Array(7);
weekArray[0] = "SUN";
weekArray[1] = "MON";
weekArray[2] = "TUE";
weekArray[3] = "WED";
weekArray[4] = "THU";
weekArray[5] = "FRI";
weekArray[6] = "SAT";

var monthArray = new Array(12);
monthArray[0] = "JAN";
monthArray[1] = "FEB";
monthArray[2] = "MAR";
monthArray[3] = "APR";
monthArray[4] = "MAY";
monthArray[5] = "JUN";
monthArray[6] = "JUL";
monthArray[7] = "AUG";
monthArray[8] = "SEPT";
monthArray[9] = "OCT";
monthArray[10] = "NOV";
monthArray[11] = "DEC";

function inside24(n) {
  if (n < 0) {
    n += 24;
  } else if (n >= 24) {
    n -= 24;
  }
  return n;
}

function convertHoursToHoursMinutes(h) {
  var x = h * 3600;
  var hh = Math.floor(x / 3600);
  if (hh < 10) hh = "0" + hh;
  var y = x % 3600;
  var mm = Math.floor(y / 60);
  if (mm < 10) mm = "0" + mm;
  return hh + ":" + mm
}

// Returns an angle (0-360) for the current hour in the day, including minutes
function hoursToAngle(hours, minutes) {
  let hourAngle = (360 / 12) * hours;
  let minAngle = (360 / 12 / 60) * minutes;
  return hourAngle + minAngle;
}

// Returns an angle (0-360) for minutes
function minutesToAngle(minutes) {
  return (360 / 60) * minutes;
}

function tick() {
  let today = new Date();
  var hours = 0;
  var mins = 0;
  var secs = 0;

  if (today.getHours() > 12) {
    hours = today.getHours()-12;
  } else if (today.getHours() == 0) {
    hours = 12;
  } else {
    hours = today.getHours();
  }

  if (String(today.getMinutes()).length == 1) {
    mins = "0" + today.getMinutes()
  } else {
    mins = today.getMinutes()
  }

  if (String(today.getSeconds()).length == 1) {
    secs = "0" + today.getSeconds()
  } else {
    secs = today.getSeconds()
  }
  let dayNumber = today.getDate();
  let dayOfWeek = weekArray[today.getDay()];
  let month = monthArray[today.getMonth()];

  //calculate curiosity time
  let jd_ut = 2440587.5 + (today.getTime() / 8.64E7);
  let jd_tt = jd_ut + (taiOffset + 32.184) / 86400;
  let j2000 = jd_tt - 2451545.0;

  let msd = (((j2000 - 4.5) / 1.027491252) + 44796.0 - 0.00096);
  let mtc = (24 * msd) % 24;

  let curiosityLocalMeanSolarTime = inside24(mtc - 222.6 * 24 / 360);
  let curiositySolValue = Math.floor(msd - (360 - 137.4) / 360) - 49268;

  let currentMarsDistance = getMarsDistance(today.getTime());
  if (currentMarsDistance != -1) {
    marsEarthDistance.innerHTML = Math.round(currentMarsDistance).toLocaleString() + " KM";
  } else {
    marsEarthDistance.innerHTML = "Distance N/A"
  }

  //set values for the clock
  earthDate.innerHTML = dayOfWeek + " " + dayNumber + " " + month;
  earthClock.innerHTML = hours + ":" + mins + ":" + secs;
  var minutesAngle = minutesToAngle(mins);

  minuteArc.setAttribute("transform", "rotate(" + minutesToAngle(mins) + " 512 250)");
  hourArc.setAttribute("transform", "rotate(" + hoursToAngle(hours, mins) + " 512 250)");

  curiosityClock.innerHTML = "M" + convertHoursToHoursMinutes(curiosityLocalMeanSolarTime);
  curiositySol.innerHTML = "SOL " + curiositySolValue;

  mslLabel.innerHTML = "MARS-MSL";
  earthLabel.innerHTML = "EARTH";
}

setInterval(function () {tick();}, 1000);

function getMarsDistance(currentTime) {
  //returns current distance to mars in KM given current time
  //range in km indexed from zero day of 4 nov 2018
  //runs out jan 1 2020
  try {
    let marsEphemeris = [1.210053413644591E+08,
1.220549227078369E+08,
1.231095912491876E+08,
1.241692592072994E+08,
1.252338346080248E+08,
1.263032248098784E+08,
1.273773395726744E+08,
1.284560933270635E+08,
1.295394065376662E+08,
1.306272062714110E+08,
1.317194262185547E+08,
1.328160064544330E+08,
1.339168932013581E+08,
1.350220387863472E+08,
1.361314019131135E+08,
1.372449482790972E+08,
1.383626514604970E+08,
1.394844938514837E+08,
1.406104672902212E+08,
1.417405728865310E+08,
1.428748195775270E+08,
1.440132211669714E+08,
1.451557920439768E+08,
1.463025422590069E+08,
1.474534728995671E+08,
1.486085725956348E+08,
1.497678155764493E+08,
1.509311612450667E+08,
1.520985549505998E+08,
1.532699295738875E+08,
1.544452076192066E+08,
1.556243036076677E+08,
1.568071266246213E+08,
1.579935828732730E+08,
1.591835780629114E+08,
1.603770194564637E+08,
1.615738174443144E+08,
1.627738865950568E+08,
1.639771462318938E+08,
1.651835206651297E+08,
1.663929392582455E+08,
1.676053365155768E+08,
1.688206523606638E+08,
1.700388327309048E+08,
1.712598305408874E+08,
1.724836069476474E+08,
1.737101326705392E+08,
1.749393888891536E+08,
1.761713670454822E+08,
1.774060668763761E+08,
1.786434923739480E+08,
1.798836461089609E+08,
1.811265231190890E+08,
1.823721058521777E+08,
1.836203612289895E+08,
1.848712400401484E+08,
1.861246781597763E+08,
1.873805987700144E+08,
1.886389149025269E+08,
1.898995318854336E+08,
1.911623495416841E+08,
1.924272641357735E+08,
1.936941701135257E+08,
1.949629616638764E+08,
1.962335340952373E+08,
1.975057849944286E+08,
1.987796151395898E+08,
2.000549291696450E+08,
2.013316360596302E+08,
2.026096494974163E+08,
2.038888882902864E+08,
2.051692769411501E+08,
2.064507465158680E+08,
2.077332358609456E+08,
2.090166931024107E+08,
2.103010771420204E+08,
2.115863585828545E+08,
2.128725192720867E+08,
2.141595496733353E+08,
2.154474438124386E+08,
2.167361925373276E+08,
2.180257767676420E+08,
2.193161625742021E+08,
2.206072991252259E+08,
2.218991193434113E+08,
2.231915423025445E+08,
2.244844762571566E+08,
2.257778215234341E+08,
2.270714728575441E+08,
2.283653212936766E+08,
2.296592555621842E+08,
2.309531632465937E+08,
2.322469318097076E+08,
2.335404495644990E+08,
2.348336066122658E+08,
2.361262957356216E+08,
2.374184132255527E+08,
2.387098596392285E+08,
2.400005405198846E+08,
2.412903671483357E+08,
2.425792574214982E+08,
2.438671369483256E+08,
2.451539403954978E+08,
2.464396129792985E+08,
2.477241117728916E+08,
2.490074062146423E+08,
2.502894770005958E+08,
2.515703126706994E+08,
2.528499038616361E+08,
2.541282362574472E+08,
2.554052840939846E+08,
2.566810059845724E+08,
2.579553438136464E+08,
2.592282242186105E+08,
2.604995614983961E+08,
2.617692608162801E+08,
2.630372209877365E+08,
2.643033365947346E+08,
2.655674994674272E+08,
2.668295997110258E+08,
2.680895264832417E+08,
2.693471686981946E+08,
2.706024157792042E+08,
2.718551585236139E+08,
2.731052900896209E+08,
2.743527070775542E+08,
2.755973106632304E+08,
2.768390077504551E+08,
2.780777121359614E+08,
2.793133457057139E+08,
2.805458396814672E+08,
2.817751358832273E+08,
2.830011878463469E+08,
2.842239614367793E+08,
2.854434344066910E+08,
2.866595942701524E+08,
2.878724341458079E+08,
2.890819468874457E+08,
2.902881186605430E+08,
2.914909235834563E+08,
2.926903207247456E+08,
2.938862537967461E+08,
2.950786529342203E+08,
2.962674375054839E+08,
2.974525190122434E+08,
2.986338035155278E+08,
2.998111934015518E+08,
3.009845885486301E+08,
3.021538870735016E+08,
3.033189858670793E+08,
3.044797811158379E+08,
3.056361689679369E+08,
3.067880464511738E+08,
3.079353126864961E+08,
3.090778703723437E+08,
3.102156274539474E+08,
3.113484988532326E+08,
3.124764081279223E+08,
3.135992889454603E+08,
3.147170862740920E+08,
3.158297571792233E+08,
3.169372710508228E+08,
3.180396089949661E+08,
3.191367620665361E+08,
3.202287281050736E+08,
3.213155072431766E+08,
3.223970966423862E+08,
3.234734854476383E+08,
3.245446510361847E+08,
3.256105572458633E+08,
3.266711546006821E+08,
3.277263819818529E+08,
3.287761689670658E+08,
3.298204381667825E+08,
3.308591071529338E+08,
3.318920898399536E+08,
3.329192973640595E+08,
3.339406386100668E+08,
3.349560205814020E+08,
3.359653488224064E+08,
3.369685280927555E+08,
3.379654634581881E+08,
3.389560618896595E+08,
3.399402343503250E+08,
3.409178982117531E+08,
3.418889797164249E+08,
3.428534161407793E+08,
3.438111573389205E+08,
3.447621664453267E+08,
3.457064196334044E+08,
3.466439049142854E+08,
3.475746200042204E+08,
3.484985693249775E+08,
3.494157602857645E+08,
3.503261991526159E+08,
3.512298869952438E+08,
3.521268163016186E+08,
3.530169687649799E+08,
3.539003144719844E+08,
3.547768123688818E+08,
3.556464116117147E+08,
3.565090533098037E+08,
3.573646722378994E+08,
3.582131982453005E+08,
3.590545572533369E+08,
3.598886718641495E+08,
3.607154616965162E+08,
3.615348436287625E+08,
3.623467321748709E+08,
3.631510402460884E+08,
3.639476805369637E+08,
3.647365676887957E+08,
3.655176211994411E+08,
3.662907687837954E+08,
3.670559496308613E+08,
3.678131168847173E+08,
3.685622387933852E+08,
3.693032982913301E+08,
3.700362911544585E+08,
3.707612231220818E+08,
3.714781064486494E+08,
3.721869562794636E+08,
3.728877871405069E+08,
3.735806097648038E+08,
3.742654284541006E+08,
3.749422391553669E+08,
3.756110283723450E+08,
3.762717729213281E+08,
3.769244404071904E+08,
3.775689901896611E+08,
3.782053745669061E+08,
3.788335399283931E+08,
3.794534277010019E+08,
3.800649750035902E+08,
3.806681150165474E+08,
3.812627771581045E+08,
3.818488872408901E+08,
3.824263678617671E+08,
3.829951393419120E+08,
3.835551215417603E+08,
3.841062367599643E+08,
3.846484136299170E+08,
3.851815914806038E+08,
3.857057242116976E+08,
3.862207826267176E+08,
3.867267545403012E+08,
3.872236426799728E+08,
3.877114610476630E+08,
3.881902306692643E+08,
3.886599755168763E+08,
3.891207190464177E+08,
3.895724814791731E+08,
3.900152777782380E+08,
3.904491162222108E+08,
3.908739974981816E+08,
3.912899142645381E+08,
3.916968511384259E+08,
3.920947850392900E+08,
3.924836857844260E+08,
3.928635168055191E+08,
3.932342358512005E+08,
3.935957955638576E+08,
3.939481438658123E+08,
3.942912241551712E+08,
3.946249753927417E+08,
3.949493322586939E+08,
3.952642256662607E+08,
3.955695840135812E+08,
3.958653355670922E+08,
3.961514121952939E+08,
3.964277542267446E+08,
3.966943155627355E+08,
3.969510676621692E+08,
3.971980010784215E+08,
3.974351240133303E+08,
3.976624584448990E+08,
3.978800351065220E+08,
3.980878886087565E+08,
3.982860535018330E+08,
3.984745615013985E+08,
3.986534397207173E+08,
3.988227096165171E+08,
3.989823863814337E+08,
3.991324786059221E+08,
3.992729881212021E+08,
3.994039099922094E+08,
3.995252326500601E+08,
3.996369381454102E+08,
3.997390024821077E+08,
3.998313959708128E+08,
3.999140835382771E+08,
3.999870249482354E+08,
4.000501749383682E+08,
4.001034833561876E+08,
4.001468954839498E+08,
4.001803528665415E+08,
4.002037950545576E+08,
4.002171626554064E+08,
4.002204018185588E+08,
4.002134696944385E+08,
4.001963396609958E+08,
4.001690046804337E+08,
4.001314775278599E+08,
4.000837877913061E+08,
4.000259767663099E+08,
3.999580918837538E+08,
3.998801819741597E+08,
3.997922939379472E+08,
3.996944707649665E+08,
3.995867505366713E+08,
3.994691660010616E+08,
3.993417444031146E+08,
3.992045073798822E+08,
3.990574708387883E+08,
3.989006448127887E+08,
3.987340333255683E+08,
3.985576343083540E+08,
3.983714395956998E+08,
3.981754350032213E+08,
3.979696004710452E+08,
3.977539102577325E+08,
3.975283332019004E+08,
3.972928331379867E+08,
3.970473696542033E+08,
3.967918994913104E+08,
3.965263789419584E+08,
3.962507675196234E+08,
3.959650328119580E+08,
3.956691558108681E+08,
3.953631353745340E+08,
3.950469903156570E+08,
3.947207582722756E+08,
3.943844917402822E+08,
3.940382526519878E+08,
3.936821070807904E+08,
3.933161211222031E+08,
3.929403582610326E+08,
3.925548780040187E+08,
3.921597353454829E+08,
3.917549806470879E+08,
3.913406596237472E+08,
3.909168132534855E+08,
3.904834775360366E+08,
3.900406831063161E+08,
3.895884547653540E+08,
3.891268110224641E+08,
3.886557637478361E+08,
3.881753180174985E+08,
3.876854722033373E+08,
3.871862183368062E+08,
3.866775427746668E+08,
3.861594272297475E+08,
3.856318502935203E+08,
3.850947896382572E+08,
3.845482250817860E+08,
3.839921425456831E+08,
3.834265385884105E+08,
3.828514247216444E+08,
3.822668303778002E+08,
3.816728035218344E+08,
3.810694085969027E+08,
3.804567224282072E+08,
3.798348293211606E+08,
3.792038165714085E+08,
3.785637711142036E+08,
3.779147774638171E+08,
3.772569167040709E+08,
3.765902661429749E+08,
3.759148992613305E+08,
3.752308856733203E+08,
3.745382909185050E+08,
3.738371759986207E+08,
3.731275966585628E+08,
3.724096024915805E+08,
3.716832360195805E+08,
3.709485319471197E+08,
3.702055167956304E+08,
3.694542090844994E+08,
3.686946201487427E+08,
3.679267555993683E+08,
3.671506173762344E+08,
3.663662063285601E+08,
3.655735252640699E+08,
3.647725823831387E+08,
3.639633949080368E+08,
3.631459925236515E+08,
3.623204200439293E+08,
3.614867386615079E+08,
3.606450253602799E+08,
3.597953705491112E+08,
3.589378744902540E+08,
3.580726433752515E+08,
3.571997858272486E+08,
3.563194102857882E+08,
3.554316233631353E+08,
3.545365289999532E+08,
3.536342281310601E+08,
3.527248185623440E+08,
3.518083948046870E+08,
3.508850476749577E+08,
3.499548635474116E+08,
3.490179232273240E+08,
3.480743005313236E+08,
3.471240607922847E+08,
3.461672596318949E+08,
3.452039424063586E+08,
3.442341446731910E+08,
3.432578938350846E+08,
3.422752118500140E+08,
3.412861186674777E+08,
3.402906359517559E+08,
3.392887906939883E+08,
3.382806184250972E+08,
3.372661658324878E+08,
3.362454926130534E+08,
3.352186723902406E+08,
3.341857925521716E+08,
3.331469529850789E+08,
3.321022638718493E+08,
3.310518429209748E+08,
3.299958124902611E+08,
3.289342970255139E+08,
3.278674210773601E+08,
3.267953079659736E+08,
];
    let dayZero = 17839; //nov 4th 2018
    let dayFraction = currentTime/86400000 - Math.floor(currentTime/86400000);
    let currentDayId = Math.floor(currentTime/86400000) - dayZero;
    let currentBaseDistance = marsEphemeris[currentDayId];
    let nextBaseDistance = marsEphemeris[(currentDayId+1)];
    let changeDuringDay = nextBaseDistance - currentBaseDistance; // km to move in next day
    var disEarth = currentBaseDistance + (dayFraction*changeDuringDay);

    return disEarth;
  } catch(err) {
    return -1;
  }
}
